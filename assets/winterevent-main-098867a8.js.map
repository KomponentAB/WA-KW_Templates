{"version":3,"file":"winterevent-main-098867a8.js","sources":["../../src/winterevent-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\n\nimport { bootstrapExtra,Properties } from \"@workadventure/scripting-api-extra\";\nimport { Subscription } from \"rxjs\";\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\n\nconsole.log('Script started successfully');\n\nlet currentPopup: any = undefined;\n\n// Waiting for the API to be ready\nWA.onInit().then(() => {\n    console.log('Scripting API ready');\n    console.log('Player tags: ', WA.player.tags);\n\n    WA.room.area.onEnter('clock').subscribe(() => {\n        const today = new Date();\n        const time = today.getHours() + \":\" + today.getMinutes();\n        currentPopup = WA.ui.openPopup(\"clockPopup\", \"It's \" + time, []);\n    });\n\n    WA.room.area.onLeave('clock').subscribe(closePopup);\n\n    // The line below bootstraps the Scripting API Extra library that adds a number of advanced properties/features to WorkAdventure\n    bootstrapExtra().then(() => {\n        console.log('Scripting API Extra ready');\n    }).catch(e => console.error(e));\n    WA.onInit().then(() => {\n    WA.room.area.onEnter('inside').subscribe(() => {\n        WA.room.hideLayer('hide/inside');\n        WA.room.showLayer('hide/outside');\n    });\n\n    WA.room.area.onEnter('outside').subscribe(() => {\n        WA.room.hideLayer('hide/outside');\n        WA.room.showLayer('hide/inside');\n    });\n    }).catch(e => console.error(e));\n}).catch(e => console.error(e));\n\nfunction closePopup() {\n    if (currentPopup !== undefined) {\n        currentPopup.close();\n        currentPopup = undefined;\n    }\n}\nWA.onInit()\n  .then(() => {\n    const startIceSkating = () => {\n      let isMoving = false;\n      return WA.player.onPlayerMove(async ({ moving }) => {\n        if (!moving || isMoving) return;\n        isMoving = true;\n        WA.controls.disablePlayerControls();\n        \n        // Define the ice area coordinate ranges\n        const minX = 1200;\n        const maxX = 1800;\n        const minY = 800;\n        const maxY = 1200;\n\n        // Generate random coordinates within the ice area\n        const randomX = Math.random() * (maxX - minX) + minX;\n        const randomY = Math.random() * (maxY - minY) + minY;\n\n        console.log(`Moving to random position: x=${randomX}, y=${randomY}`);\n        \n        WA.player.moveTo(randomX, randomY, 30).then(({ }) => {\n          WA.controls.restorePlayerControls();\n          isMoving = false;\n        });\n      });\n    };\n\n\n    let skatingSub: Subscription;\n\n    WA.room.area.onEnter(\"ice\").subscribe(() => {\n      console.log(\"enter\");\n      skatingSub = startIceSkating();\n    });\n\n    WA.room.area.onLeave(\"ice\").subscribe(() => {\n      console.log(\"leave\");\n      skatingSub.unsubscribe();\n    });\n  })\n  .catch((e) => console.error(e));\n\n  WA.onInit().then(() => {\n    console.log('WA.onInit called');\n    WA.room.getTiledMap().then(map => {\n        console.log('Tiled map retrieved');\n        const mapProperties = new Properties(map.properties);\n        const collisionLayerName = mapProperties.getString('collisionLayerName') || 'collisions';\n\n        const collisionLayer = map.layers.find(layer => layer.name === collisionLayerName);\n        if (collisionLayer && collisionLayer.type === 'tilelayer') {\n            const tiles = collisionLayer.data;\n            const width = collisionLayer.width;\n            const height = collisionLayer.height;\n\n            for (let y = 0; y < height; y++) {\n                for (let x = 0; x < width; x++) {\n                    const tileIndex = y * width + x;\n                    if (tiles[tileIndex] !== 0) { // Assuming 0 means no tile\n                        console.log(`Tile at (${x}, ${y})`);\n                    }\n                }\n            }\n        } else {\n            console.error('Collision layer not found or is not a tile layer');\n        }\n    }).catch(e => console.error('Error retrieving tiled map:', e));\n}).catch(e => console.error('Error during WA.onInit:', e));\n\nasync function populateGifts() {\n    const map = await WA.room.getTiledMap();\n    console.log(\"Room Height: \", map.height);\n    console.log(\"Room Width: \", map.width);\n\n    const mapProperties = new Properties(map.properties);\n    const collisionLayerName = mapProperties.getString('collisionLayerName') || 'collisions';\n    const collisionLayer = map.layers.find(layer => layer.name === collisionLayerName);\n\n    if (!collisionLayer || collisionLayer.type !== 'tilelayer') {\n        console.error('Collision layer not found or is not a tile layer');\n        return;\n    }\n\n    const tiles = collisionLayer.data;\n    const width = collisionLayer.width;\n    const height = collisionLayer.height;\n\n    const potentialGiftTiles = [];\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            const tileIndex = y * width + x;\n            if (tiles[tileIndex] === 0) { // Assuming 0 means no collision\n                potentialGiftTiles.push({ x, y });\n            }\n        }\n    }\n\n    const giftOptions = 8;\n    const giftsToPlace = 10; // Number of gifts to place\n    const placedGifts: { x: number, y: number, tile: string, layer: string }[] = [];\n\n    for (let i = 0; i < giftsToPlace; i++) {\n        const randomIndex = Math.floor(Math.random() * potentialGiftTiles.length);\n        const { x, y } = potentialGiftTiles.splice(randomIndex, 1)[0];\n        const giftTile = `gift_${Math.floor(Math.random() * giftOptions) + 1}`;\n        placedGifts.push({ x, y, tile: giftTile, layer: \"gifts\" });\n    }\n\n    WA.room.setTiles(placedGifts);\n    console.log('Gifts placed:', placedGifts);\n\n    WA.room.onEnterLayer(\"gifts\").subscribe(async () => {\n        console.log('Player entered gifts layer');\n        const { x, y } = await WA.player.getPosition();\n        console.log('Player position in pixels:', { x, y });\n        const tileX = Math.floor(x / 32);\n        const tileY = Math.floor(y / 32);\n        console.log('Player position in tiles:', { tileX, tileY });\n\n        const giftIndex = placedGifts.findIndex(gift => gift.x === tileX && gift.y === tileY);\n        if (giftIndex !== -1) {\n            console.log('Gift found at player position');\n            WA.chat.sendChatMessage(\"You found a gift!\", \"Game\");\n            WA.room.setTiles([{ x: tileX, y: tileY, tile: null, layer: \"gifts\" }]);\n            placedGifts.splice(giftIndex, 1);\n        } else {\n            console.log('No gift at player position');\n        }\n    });\n}\n\npopulateGifts().catch(e => console.error('Error populating gifts:', e));\n\n\nWA.onInit().then(async () => {\n  WA.player.onPlayerMove(async ({ x, y, moving }) => {\n    const material = await checkPlayerMaterial({ x, y });\n    console.log(material);\n\n    if (!material) {\n      return mySound?.stop();\n    }\n\n    if (!moving && !material) {\n      return mySound?.stop();\n    } else {\n      mySound?.stop();\n      return playRandomSound(material);\n    }\n  });\n});\n\nexport {};"],"names":["currentPopup","today","time","closePopup","bootstrapExtra","e","startIceSkating","isMoving","moving","minX","maxX","minY","maxY","randomX","randomY","skatingSub","map","collisionLayerName","Properties","collisionLayer","layer","tiles","width","height","y","x","tileIndex","populateGifts","potentialGiftTiles","giftOptions","giftsToPlace","placedGifts","i","randomIndex","giftTile","tileX","tileY","giftIndex","gift","material","checkPlayerMaterial","_b","mySound","_c","playRandomSound","_a"],"mappings":"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"}