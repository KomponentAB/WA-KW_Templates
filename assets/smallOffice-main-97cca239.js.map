{"version":3,"file":"smallOffice-main-97cca239.js","sources":["../../src/smallOffice-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\n\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\n\nconsole.log('Script started successfully');\n\nlet currentPopup: any = undefined;\n\n// Waiting for the API to be ready\nWA.onInit().then(() => {\n    console.log('Scripting API ready');\n    console.log('Player tags: ',WA.player.tags)\n\n    WA.room.area.onEnter('clock').subscribe(() => {\n        const today = new Date();\n        const time = today.getHours() + \":\" + today.getMinutes();\n        currentPopup = WA.ui.openPopup(\"clockPopup\", \"It's \" + time, []);\n    })\n\n    WA.room.area.onLeave('clock').subscribe(closePopup)\n\n    // The line below bootstraps the Scripting API Extra library that adds a number of advanced properties/features to WorkAdventure\n    bootstrapExtra().then(() => {\n        console.log('Scripting API Extra ready');\n    }).catch(e => console.error(e));\n\n}).catch(e => console.error(e));\n\nfunction closePopup(){\n    if (currentPopup !== undefined) {\n        currentPopup.close();\n        currentPopup = undefined;\n    }\n}\n\n// Get an existing website object where 'my_website' is the name of the object (on any layer object of the map)\nasync function updateTitle() {\n    var text: string = WA.state.textVariable as string;\n    console.log('Text is configured as ' + text);\n    var color: string = WA.state.colorVariable as string;\n    console.log('Color is configured as ' + color);\n    var newTitle = `https://iw6tkif7th7yp5ax2ufzkl3kce0bcuys.lambda-url.us-east-1.on.aws/?text=${encodeURIComponent(text)}&imageType=caption&width=88&height=24&color=${encodeURIComponent(color)}`;\n    console.log('New img-url of title is ' + newTitle);\n    const website = await WA.room.website.get(\"titleScreen\");\n    website.url = newTitle;\n    website.visible = true;\n    console.log(`Title has been changed to ${website.url}`);\n};\nWA.onInit().then(() => { updateTitle(); });\n\n\n// Listen for changes to the textVariable\nWA.state.onVariableChange('textVariable').subscribe(() => {\n    console.log(`Text variable changed`);\n    updateTitle();\n});\n\n// Listen for changes to the colorVariable\nWA.state.onVariableChange('colorVariable').subscribe(() => {\n    console.log(`Color variable changed`);\n    updateTitle();\n});\n\nexport {};\n"],"names":["currentPopup","today","time","closePopup","bootstrapExtra","updateTitle","text","color","newTitle","website"],"mappings":"uCAIA,QAAQ,IAAI,6BAA6B,EAEzC,IAAIA,EAGJ,GAAG,OAAA,EAAS,KAAK,IAAM,CACnB,QAAQ,IAAI,qBAAqB,EACjC,QAAQ,IAAI,gBAAgB,GAAG,OAAO,IAAI,EAE1C,GAAG,KAAK,KAAK,QAAQ,OAAO,EAAE,UAAU,IAAM,CACpC,MAAAC,MAAY,KACZC,EAAOD,EAAM,SAAA,EAAa,IAAMA,EAAM,aAC5CD,EAAe,GAAG,GAAG,UAAU,aAAc,QAAUE,EAAM,CAAA,CAAE,CAAA,CAClE,EAED,GAAG,KAAK,KAAK,QAAQ,OAAO,EAAE,UAAUC,CAAU,EAGnCC,EAAA,EAAE,KAAK,IAAM,CACxB,QAAQ,IAAI,2BAA2B,CAAA,CAC1C,EAAE,SAAW,QAAQ,MAAM,CAAC,CAAC,CAElC,CAAC,EAAE,MAAM,GAAK,QAAQ,MAAM,CAAC,CAAC,EAE9B,SAASD,GAAY,CACbH,IAAiB,SACjBA,EAAa,MAAM,EACJA,EAAA,OAEvB,CAGA,eAAeK,GAAc,CACrB,IAAAC,EAAe,GAAG,MAAM,aACpB,QAAA,IAAI,yBAA2BA,CAAI,EACvC,IAAAC,EAAgB,GAAG,MAAM,cACrB,QAAA,IAAI,0BAA4BA,CAAK,EACzC,IAAAC,EAAW,8EAA8E,mBAAmBF,CAAI,CAAC,+CAA+C,mBAAmBC,CAAK,CAAC,GACrL,QAAA,IAAI,2BAA6BC,CAAQ,EACjD,MAAMC,EAAU,MAAM,GAAG,KAAK,QAAQ,IAAI,aAAa,EACvDA,EAAQ,IAAMD,EACdC,EAAQ,QAAU,GAClB,QAAQ,IAAI,6BAA6BA,EAAQ,GAAG,EAAE,CAC1D,CACA,GAAG,OAAA,EAAS,KAAK,IAAM,CAAcJ,GAAG,CAAC,EAIzC,GAAG,MAAM,iBAAiB,cAAc,EAAE,UAAU,IAAM,CACtD,QAAQ,IAAI,uBAAuB,EACvBA,GAChB,CAAC,EAGD,GAAG,MAAM,iBAAiB,eAAe,EAAE,UAAU,IAAM,CACvD,QAAQ,IAAI,wBAAwB,EACxBA,GAChB,CAAC"}